#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.9
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Opal
  class Handlebars < Racc::Parser


##### State transition tables begin ###

racc_action_table = [
    53,    33,    45,    42,    43,    44,    48,    24,    52,    35,
    26,    26,     9,    10,    11,    49,    12,    50,    13,    14,
    15,     9,    10,    11,    51,    12,    37,    13,    14,    15,
     9,    10,    11,    35,    19,    16,    13,    14,    15,     9,
    10,    11,    26,    12,    31,    13,    14,    15,     9,    10,
    11,    59,    12,    60,    13,    14,    15,     9,    10,    11,
    61,    12,    62,    13,    14,    15,    68,    65,    66,    67,
    26,    45,    42,    43,    44,    48,    24,    24,    24,    24,
    26,    26,    26,    26,    63,    60,    26 ]

racc_action_check = [
    30,    19,    23,    23,    23,    23,    23,    19,    29,    21,
    30,    19,     6,     6,     6,    25,     6,    27,     6,     6,
     6,     5,     5,     5,    28,     5,    22,     5,     5,     5,
     3,     3,     3,    20,     3,     1,     3,     3,     3,     0,
     0,     0,    35,     0,    16,     0,     0,     0,    32,    32,
    32,    46,    32,    48,    32,    32,    32,    17,    17,    17,
    49,    17,    54,    17,    17,    17,    60,    60,    60,    60,
    60,    38,    38,    38,    38,    38,    13,    12,    11,    14,
    13,    12,    11,    14,    55,    59,    15 ]

racc_action_pointer = [
    37,    35,   nil,    28,   nil,    19,    10,   nil,   nil,   nil,
   nil,    67,    66,    65,    68,    71,    44,    55,   nil,    -4,
    26,     2,    21,    -9,   nil,    -2,   nil,    12,    19,     3,
    -5,   nil,    46,   nil,   nil,    27,   nil,   nil,    60,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    36,   nil,    37,    45,
   nil,   nil,   nil,   nil,    57,    79,   nil,   nil,   nil,    69,
    55,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil ]

racc_action_default = [
    -4,   -44,    -1,    -3,    -5,    -4,    -4,    -9,   -10,   -11,
   -12,   -44,   -44,   -44,   -44,   -44,   -44,   -44,    -6,   -44,
   -44,   -44,   -44,   -24,   -25,   -41,   -43,   -44,   -44,   -44,
   -44,    69,    -2,   -20,    -7,   -44,    -8,   -13,   -22,   -23,
   -27,   -28,   -29,   -30,   -31,   -32,   -33,   -35,   -43,   -44,
   -14,   -16,   -17,   -18,   -44,   -44,   -21,   -26,   -34,   -44,
   -44,   -42,   -19,   -15,   -36,   -37,   -38,   -39,   -40 ]

racc_goto_table = [
    30,    18,    40,    39,     2,    34,    36,     1,    41,    20,
    21,    22,    38,    28,    29,    54,    17,    57,    56,    32,
    55,    58,   nil,    41,   nil,   nil,   nil,   nil,   nil,   nil,
    18,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    64 ]

racc_goto_check = [
    12,     5,    15,    14,     2,     7,     7,     1,    12,     2,
     2,    11,    13,    11,    11,    12,     4,    15,    14,     3,
    12,    17,   nil,    12,   nil,   nil,   nil,   nil,   nil,   nil,
     5,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    12 ]

racc_goto_pointer = [
   nil,     7,     4,     2,    13,    -2,   nil,   -15,   nil,   nil,
   nil,     0,   -15,   -11,   -20,   -21,   nil,   -25,   nil ]

racc_goto_default = [
   nil,   nil,   nil,     3,   nil,     4,     5,   nil,     6,     7,
     8,    27,    23,   nil,   nil,   nil,    46,    47,    25 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 19, :_reduce_1,
  3, 20, :_reduce_2,
  1, 20, :_reduce_3,
  0, 20, :_reduce_4,
  1, 21, :_reduce_5,
  2, 21, :_reduce_6,
  3, 23, :_reduce_7,
  3, 23, :_reduce_8,
  1, 23, :_reduce_9,
  1, 23, :_reduce_10,
  1, 23, :_reduce_11,
  1, 23, :_reduce_12,
  3, 26, :_reduce_13,
  3, 24, :_reduce_14,
  3, 25, :_reduce_15,
  3, 27, :_reduce_16,
  3, 27, :_reduce_17,
  3, 28, :_reduce_18,
  4, 28, :_reduce_19,
  2, 22, :_reduce_20,
  3, 29, :_reduce_21,
  2, 29, :_reduce_22,
  2, 29, :_reduce_23,
  1, 29, :_reduce_24,
  1, 29, :_reduce_25,
  2, 31, :_reduce_26,
  1, 31, :_reduce_27,
  1, 33, :_reduce_28,
  1, 33, :_reduce_29,
  1, 33, :_reduce_30,
  1, 33, :_reduce_31,
  1, 33, :_reduce_32,
  1, 32, :_reduce_33,
  2, 34, :_reduce_34,
  1, 34, :_reduce_35,
  3, 35, :_reduce_36,
  3, 35, :_reduce_37,
  3, 35, :_reduce_38,
  3, 35, :_reduce_39,
  3, 35, :_reduce_40,
  1, 30, :_reduce_41,
  3, 36, :_reduce_42,
  1, 36, :_reduce_43 ]

racc_reduce_n = 44

racc_shift_n = 69

racc_token_table = {
  false => 0,
  :error => 1,
  :CONTENT => 2,
  :COMMENT => 3,
  :OPEN_BLOCK => 4,
  :CLOSE => 5,
  :OPEN_INVERSE => 6,
  :OPEN_ENDBLOCK => 7,
  :OPEN => 8,
  :OPEN_UNESCAPED => 9,
  :OPEN_PARTIAL => 10,
  :DATA => 11,
  :STRING => 12,
  :INTEGER => 13,
  :BOOLEAN => 14,
  :ID => 15,
  :EQUALS => 16,
  :SEP => 17 }

racc_nt_base = 18

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "CONTENT",
  "COMMENT",
  "OPEN_BLOCK",
  "CLOSE",
  "OPEN_INVERSE",
  "OPEN_ENDBLOCK",
  "OPEN",
  "OPEN_UNESCAPED",
  "OPEN_PARTIAL",
  "DATA",
  "STRING",
  "INTEGER",
  "BOOLEAN",
  "ID",
  "EQUALS",
  "SEP",
  "$start",
  "tagret",
  "program",
  "statements",
  "simpleInverse",
  "statement",
  "openInverse",
  "closeBlock",
  "openBlock",
  "mustache",
  "partial",
  "inMustache",
  "path",
  "params",
  "hash",
  "param",
  "hashSegments",
  "hashSegment",
  "pathSegments" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

def _reduce_1(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_2(val, _values, result)
      result = s(:program, val[0], val[2])
    
    result
end

def _reduce_3(val, _values, result)
      result = s(:program, val[0])
    
    result
end

def _reduce_4(val, _values, result)
      result = s(:program, [])
    
    result
end

def _reduce_5(val, _values, result)
      result = [val[0]]
    
    result
end

def _reduce_6(val, _values, result)
      val[0].push val[1]
      result = val[0]
    
    result
end

def _reduce_7(val, _values, result)
      result = s(:block, val[0], val[1], val[1], val[2])
    
    result
end

def _reduce_8(val, _values, result)
      result = s(:block, val[0], val[1], val[1], val[2])
    
    result
end

def _reduce_9(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_10(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_11(val, _values, result)
      result = s(:content, val[0])
    
    result
end

def _reduce_12(val, _values, result)
      result = s(:comment, val[0])
    
    result
end

def _reduce_13(val, _values, result)
      result = s(:mustache, val[1][0], val[1][1])
    
    result
end

def _reduce_14(val, _values, result)
      result = s(:mustache, val[1][0], val[1][1])
    
    result
end

def _reduce_15(val, _values, result)
      result = val[1]
    
    result
end

def _reduce_16(val, _values, result)
      result = s(:mustache, val[1][0], val[1][1])
    
    result
end

def _reduce_17(val, _values, result)
      result = s(:mustache, val[1][0], val[1][1], true)
    
    result
end

def _reduce_18(val, _values, result)
      result = s(:partial, val[1])
    
    result
end

def _reduce_19(val, _values, result)
      result = s(:partial, val[1], val[2])
    
    result
end

def _reduce_20(val, _values, result)
    
    result
end

def _reduce_21(val, _values, result)
      result = [[val[0]] + val[1], val[2]]
    
    result
end

def _reduce_22(val, _values, result)
      result = [[val[0]] + val[1], nil]
    
    result
end

def _reduce_23(val, _values, result)
      result = [[val[0]], val[1]]
    
    result
end

def _reduce_24(val, _values, result)
      result = [[val[0]], nil]
    
    result
end

def _reduce_25(val, _values, result)
      result = [s(:data, val[0]), nil]
    
    result
end

def _reduce_26(val, _values, result)
      val[0].push val[1]
      result = val[0]
    
    result
end

def _reduce_27(val, _values, result)
      result = [val[0]]
    
    result
end

def _reduce_28(val, _values, result)
      result = val[0]
    
    result
end

def _reduce_29(val, _values, result)
      result = s(:string, val[0])
    
    result
end

def _reduce_30(val, _values, result)
      result = s(:integer, val[0])
    
    result
end

def _reduce_31(val, _values, result)
      result = s(:boolean, val[0])
    
    result
end

def _reduce_32(val, _values, result)
      result = s(:data, val[0])
    
    result
end

def _reduce_33(val, _values, result)
      result = s(:hash, val[0])
    
    result
end

def _reduce_34(val, _values, result)
      val[0] << val[1]
      result = val[0]
    
    result
end

def _reduce_35(val, _values, result)
      result = [val[0]]
    
    result
end

def _reduce_36(val, _values, result)
      result = [val[0], val[2]]
    
    result
end

def _reduce_37(val, _values, result)
      result = [val[0], s(:string, val[2])]
    
    result
end

def _reduce_38(val, _values, result)
      result = [val[0], s(:integer, val[2])]
    
    result
end

def _reduce_39(val, _values, result)
      result = [val[0], s(:boolean, val[2])]
    
    result
end

def _reduce_40(val, _values, result)
      result = [val[0], s(:data, val[2])]
    
    result
end

def _reduce_41(val, _values, result)
      result = s(:id, val[0])
    
    result
end

def _reduce_42(val, _values, result)
      val[0] << val[2]
      result = val[0]
    
    result
end

def _reduce_43(val, _values, result)
      result = [val[0]]
    
    result
end

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Handlebars
  end   # module Opal
